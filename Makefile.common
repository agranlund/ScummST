

MKDIR 	= mkdir -p
ECHO  	= echo -n
CAT    	= cat
RM      = rm -f
RM_REC 	= $(RM) -r
ZIP 	= zip -q
CP  	= cp


######################################################################
# Game specific
######################################################################

ifeq ($(game),monkey1)
GAME	= MONKEY1
ENGINE	= SCUMM5

else ifeq ($(game),monkey2)
GAME	= MONKEY2
ENGINE	= SCUMM5

else ifeq ($(game),atlantis)
GAME	= ATLANTIS
ENGINE	= SCUMM5

else ifeq ($(game),tentacle)
GAME	= TENTACLE
ENGINE	= SCUMM6

else ifeq ($(game),samnmax)
GAME	= SAMNMAX
ENGINE	= SCUMM6

else ifeq ($(game),sierra)
GAME	= SIERRA
ENGINE	= SCI1
endif

ifeq ($(GAME),)
$(error "Error: GAME is undefined. must specify game=[monkey1,monkey2,atlantis,tentacle,samnmax]")
endif

ifeq ($(ENGINE),)
$(error "Error: ENGINE is undefined. must specify game=[monkey1,monkey2,atlantis,tentacle,samnmax]")
endif

DEFINES	+= -DENGINE_$(ENGINE)
ifeq ($(ENGINE),SCUMMALL)
DEFINES += -DENGINE_SCUMM5 -DENGINE_SCUMM6
endif

######################################################################
# Target
######################################################################
DEFINES 	+= -DGAME_$(GAME) -DSINGLEGAME
INCLUDES	+= -I. -Icommon -Icommon/sound
EXEPATH		= bin

ifeq ($(EXENAME),)
EXENAME		= $(GAME)$(EXECUTABLE_EXT)
endif
EXECUTABLE 	= $(EXEPATH)/$(EXENAME)



######################################################################
# The default build target: just build the scummvm executable
######################################################################
all: $(EXECUTABLE) 



######################################################################
# Various minor settings
######################################################################

OBJS += \
	backends/midi/adlib.o backends/midi/null.o \
	common/sound/audiostream.o common/sound/fmopl.o common/sound/mididrv.o common/sound/midiparser.o common/sound/midiparser_smf.o \
	common/sound/mixer.o common/sound/mpu401.o common/sound/rate.o common/sound/voc.o \
	common/engine.o common/gameDetector.o common/main.o common/config-manager.o common/file.o \
	common/scaler.o common/str.o common/timer.o common/util.o common/savefile.o common/system.o 

ifneq ($(filter $(ENGINE),SCUMMALL SCUMM5 SCUMM6),)
OBJS += \
	scumm/actor.o scumm/base-costume.o scumm/boxes.o scumm/camera.o scumm/charset.o scumm/costume.o scumm/cursor.o scumm/dialogs.o scumm/gfx.o \
	scumm/imuse.o scumm/imuse_player.o scumm/instrument.o scumm/object.o scumm/palette.o scumm/resource.o \
	scumm/saveload.o scumm/script.o scumm/scummvm.o scumm/sound.o scumm/string.o scumm/vars.o scumm/verbs.o scumm/resource_converter.o \
	common/gui/about.o common/gui/chooser.o common/gui/dialog.o common/gui/ListWidget.o common/gui/options.o common/gui/PopUpWidget.o common/gui/message.o common/gui/newgui.o common/gui/widget.o

endif

ifneq ($(filter $(ENGINE),SCUMMALL SCUMM5),)
OBJS += scumm/script_v5.o
endif

ifneq ($(filter $(ENGINE),SCUMMALL SCUMM6),)
OBJS += scumm/script_v6.o scumm/bomp.o
endif

ifneq ($(filter $(ENGINE),SCI1),)
#OBJS += 
endif



######################################################################
# The build rules follow - normally you should have no need to
# touch whatever comes after here.
######################################################################

# Concat DEFINES and INCLUDES to form the CPPFLAGS
CPPFLAGS:= $(DEFINES) $(INCLUDES)

# Make main.o depend on all other object files. This way if anything is
# changed, it causes main.cpp to be recompiled. This in turn ensures that
# the build date in gScummVMBuildDate is correct.
common/main.o: $(OBJS)

# The build rule for the ScummVM executable
$(EXEPATH):
	mkdir $(EXEPATH)

$(EXECUTABLE): $(EXEPATH) $(OBJS) $(DISASM) $(STRIPX)
	$(CXX) $(LDFLAGS) $(PRE_OBJS_FLAGS) $(OBJS) $(POST_OBJS_FLAGS) $(LIBS) -o $@
	$(STRIP)
	$(CXX) --version


clean:
	$(RM) $(OBJS) $(DISASM) $(SYMBOLS) $(EXECUTABLE)

disasm: $(DISASM)

.PHONY: all clean dist go


# Old (dumb) compile & dependcy rules
INCS	+= scumm/scumm.h common/scummsys.h common/stdafx.h
.cpp.o:
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c $(<) -o $*.o 


$(OBJS): $(INCS)


